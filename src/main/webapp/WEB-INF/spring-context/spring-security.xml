<b:beans xmlns="http://www.springframework.org/schema/security"
         xmlns:b="http://www.springframework.org/schema/beans"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/security
         http://www.springframework.org/schema/security/spring-security.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">


   <!-- <context:annotation-config/>
    <context:component-scan base-package="grocerystore"/>-->

<!-- enable use-expressions -->

    <http>
        <intercept-url pattern="/" access="permitAll" />
        <intercept-url pattern="/GroceryList" access="hasRole('ROLE_USER')" />
        <!--<intercept-url pattern="/*" access="hasRole('ROLE_USER')" />-->
        <csrf disabled="true"/>
        <form-login
                login-page="/Login"
                username-parameter="email"
                password-parameter="password"
                default-target-url="/Index"/>

        <!--<logout logout-url="/perform_logout" delete-cookies="JSESSIONID" success-handler-ref="customLogoutSuccessHandler"/>-->

        <!--<form-login />
        <logout />-->
    </http>

    <authentication-manager>
        <authentication-provider user-service-ref="userDetailsService">
            <password-encoder ref="encoder" />
        </authentication-provider>
    </authentication-manager>

    <b:bean id="encoder" class="grocerystore.services.security.GrocerystorePasswordEncoder" />
    <b:bean id="userDetailsService" class="grocerystore.services.security.UserDetailsServiceImpl">
        <b:constructor-arg name="userSec" ref="userSecSql"/>
    </b:bean>
    <b:bean id="userSecSql" class="grocerystore.domain.concrete.UserSecSql"/>


    <!--<http auto-config="true" use-expressions="true">

        <intercept-url pattern="/" access="hasRole('ROLE_ADMIN')" />

        &lt;!&ndash; access denied page &ndash;&gt;
        <access-denied-handler error-page="/403" />

        <form-login
                login-page="/login"
                default-target-url="/welcome"
                authentication-failure-url="/login?error"
                username-parameter="username"
                password-parameter="password" />
        <logout logout-success-url="/login?logout"  />
        &lt;!&ndash; enable csrf protection &ndash;&gt;
        <csrf/>
    </http>-->

    <!-- Select users and user_roles from database -->
    <!--<authentication-manager>
        <authentication-provider>
            <jdbc-user-service data-source-ref="securityDataSource"
                               users-by-username-query=
                                       "select email as username,password,TRUE from users where email=?"
                               authorities-by-username-query=
                                       "select email as username,roles.name as role from users,roles where users.roleid=roles.id and email=?" />
        </authentication-provider>
    </authentication-manager>-->

    <!--<authentication-manager>
        <authentication-provider>
            <user-service>
                <user name="admin" password="pass" authorities="ROLE_ADMIN,ROLE_USER"/>
                <user name="user1" password="1111" authorities="ROLE_USER"/>
                <user name="user2" password="2222" disabled="true" authorities="ROLE_USER"/>
            </user-service>
        </authentication-provider>
    </authentication-manager>-->


</b:beans>